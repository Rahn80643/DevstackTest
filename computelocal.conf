[[local|localrc]]
GIT_BASE=${GIT_BASE:-https://git.openstack.org}

SERVICE_HOST=#Set host IP (maybe control)
MYSQL_HOST=$SERVICE_HOST
RABBIT_HOST=$SERVICE_HOST
Q_HOST=$SERVICE_HOST
MATCHMAKER_REDIS_HOST=$SERVICE_HOST
DATABASE_TYPE=mysql

ADMIN_PASSWORD=#Set password 
DATABASE_PASSWORD=$ADMIN_PASSWORD
RABBIT_PASSWORD=$ADMIN_PASSWORD
SERVICE_PASSWORD=$ADMIN_PASSWORD
MYSQL_PASSWORD=$ADMIN_PASSWORD
SERVICE_TOKEN=secrete
RECLONE=no

# public interface eth0 will be added to ovs br-ex. eth0 loses its ip, br-ex gets the ip.
# if the process is not finished correctly, host is left ssh unconnectable.
PUBLIC_INTERFACE=#set interface

FLAT_INTERFACE=#set interface
FIXED_RANGE=#Fixed IP range
NETWORK_GATEWAY=#Network gateway
FLOATING_RANGE=#Floating IP range
PUBLIC_NETWORK_GATEWAY=#network gateway

# NEED TO CHANGE
HOST_IP=#Set local IP

# misc
API_RATE_LIMIT=False
LIBS_FROM_GIT=python-openstackclient

# log
DEBUG=True
VERBOSE=True
DEST=/opt/stack
LOGFILE=$DEST/logs/stack.sh.log
SCREEN_LOGDIR=$DEST/logs/screen

SYSLOG=False
LOG_COLOR=False
LOGDAYS=7

# If don't set ENABLED_SERVICES, devstack will install its default set of services
ENABLED_SERVICES=dstat,rabbit,tempest

# Nova
enable_service n-cpu
NOVA_VNC_ENABLED=True
NOVNCPROXY_URL="http://${SERVICE_HOST}:6080/vnc_auto.html"
VNCSERVER_LISTEN=$HOST_IP
VNCSERVER_PROXYCLIENT_ADDRESS=$VNCSERVER_LISTEN

# Cinder
enable_service c-vol
GLANCE_CEPH_USER=glance
GLANCE_CEPH_POOL=glance
CINDER_DRIVER=ceph
CINDER_CEPH_USER=cinder
CINDER_CEPH_POOL=cinder
CINDER_CEPH_UUID=65B06887-B0EA-427F-B8BD-829AC2E18FF6
CINDER_BAK_CEPH_POOL=cinder_bak
CINDER_BAK_CEPH_USER=cind_bak
CINDER_ENABLED_BACKENDS=ceph,lvm
NOVA_CEPH_POOL=nova

VOLUME_GROUP="stack-volumes"
VOLUME_NAME_PREFIX="volume-"
VOLUME_BACKING_FILE_SIZE=10250M

# Swift
# I find no way to install multi-node swift with devstack, so I just use standalone swift on controller node
#enable_service s-proxy s-object s-container s-account
SWIFT_HASH=E75834B828A54832B8AF2294FD8F5C5D
SWIFT_REPLICAS=3
SWIFT_DATA_DIR=$DEST/data/swift

# Neutron
enable_service q-metering
enable_service q-agt
enable_service q-dhcp
enable_service q-l3
enable_service q-meta
enable_service q-fwaas
enable_service q-lbaas
#enable_service q-vpn

# VLAN configuration
Q_PLUGIN=ml2
ENABLE_TENANT_VLANS=True

# GRE tunnel configuration
Q_PLUGIN=ml2
ENABLE_TENANT_TUNNELS=True

# VXLAN tunnel configuration
Q_PLUGIN=ml2
Q_ML2_TENANT_NETWORK_TYPE=vxlan

# Ceilometer
enable_service ceilometer-acompute
CEILOMETER_BACKEND=mongodb
